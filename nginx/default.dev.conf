upstream client {
    server client:3000;
}

upstream server {
    server server:5000;
}


server {
    # listen 443 ssl default_server;
    # # listen 80;
    server_name _;
    # ssl_certificate /etc/letsencrypt/live/database-server.ml/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/database-server.ml/privkey.pem; 
    # include /etc/letsencrypt/options-ssl-nginx.conf;
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; 

    location / {
        proxy_pass http://client;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
        
    }
  location /sockjs-node {
        proxy_pass http://client;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }
    location /api/v1/sockjs-node {
        proxy_pass http://server;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }
    location /api/v1 {
        proxy_pass http://server;
    }
}

# server {
#     listen 80;
#     server_name  database-server.ml;
#     return 301 https://$host$request_uri;
# }
